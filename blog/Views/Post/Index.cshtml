@model IEnumerable<blog.Models.Post>

@{
    ViewBag.Title = "Index";
}

<section>
    <form action="#" method="post">
        <h3>Search for post</h3>
        <p>
            <label for="fromDate">Between</label>
            <input name="fromDate" id="fromDate" type="date" required />
        </p>
        <p>
            <label for="untilDate">To</label>
            <input name="untilDate" id="untilDate" type="date" required />
        </p>
        <p>
            <label for="authorName">Author</label>
            <input name="authorName" id="authorName" type="text" required />
        </p>
        <p>
            <label for="email">E-mail</label>
            <input name="email" id="email" type="email" required />
        </p>
        <p>
            <label for="minPostComments">Minimum post comments</label>
            <input name="minPostComments" id="minPostComments" min="0" max="10" type="range" />
        </p>
        <p><input id="search_btn" name="search_btn" type="submit" value="Search post" /></p>
    </form>
</section>
@{int itemCount = 0; }|

@foreach (var item in Model)
{
    itemCount++;
    <hr />
<section>
    <article class="blogPost">
        <header>
            <h2>@Html.DisplayFor(modelItem => item.Title)</h2>
            <p>Posted on <time datetime="@item.Date">@Html.DisplayFor(modelItem => item.Date)</time> by <a href="@Html.DisplayFor(modelItem => item.AuthorWebsiteUrl)">@Html.DisplayFor(modelItem => item.Author)</a> - <a href="#comments">@Html.DisplayFor(modelItem => item.Comments.Count) comments</a></p>
        </header>
        <div>
            <p>@Html.DisplayFor(modelItem => item.Content)</p>

            @if (!String.IsNullOrEmpty(item.Image))
            {
                <img src="~/Content/images/posts/@item.Image" alt="@item.Image" />
            }

            @if (!String.IsNullOrEmpty(item.Video))
            {
                <video controls="controls">
                    <source src="~/Content/videos/posts/@item.Video" type="video/mp4" />
                    Your browser does not support the video tag.
                </video>
            }
        </div>
    </article>
</section>
<section class="comments">
    <h3>Comments</h3>

    @foreach (var comment in item.Comments)
    {
        string authourWebsiteUrl = "#";

        if (!String.IsNullOrEmpty(comment.AuthorWebsiteUrl))
        {
            authourWebsiteUrl = comment.AuthorWebsiteUrl;
        }

        <article>
            <header>
                <a href="@authourWebsiteUrl">@Html.DisplayFor(modelItem => comment.Author)</a> on <time datetime="@comment.Date">@Html.DisplayFor(modelItem => comment.Date)</time>
            </header>
            <p>@Html.DisplayFor(modelItem => comment.Content)</p>
        </article>
    }
</section>
    using (Html.BeginForm("Create2", "Comment", FormMethod.Post, new { id = "form_" + itemCount }))
    {
        <section>
            @Html.AntiForgeryToken()

            <h3>Post a comment</h3>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <p>
                <input type="hidden" name="PostID" value="@item.ID" class="form-control" />
                @Html.ValidationMessage("PostID", "", new { @class = "text-danger" })
            </p>

            <p>
                @Html.Label("Title", htmlAttributes: new { @class = "control-label col-md-2" })
                <input tyep="text" name="Title" />
                @Html.ValidationMessage("Title", "", new { @class = "text-danger" })
            </p>

            <p>
                @Html.Label("Author", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.Editor("Author", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("Author", "", new { @class = "text-danger" })
            </p>

            <p>
                @Html.Label("AuthorWebsiteUrl", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.Editor("AuthorWebsiteUrl", new { htmlAttributes = new { @class = "form-control", @type="url" } })
                @Html.ValidationMessage("AuthorWebsiteUrl", "", new { @class = "Ur" })
            </p>

            <p>
                @Html.Label("Content", htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.TextArea("Content", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("Content", "", new { @class = "text-danger" })
            </p>

            <p>
                <input type="submit" value="Post comment" class="btn btn-default" />
            </p>
        </section>
    }

}
